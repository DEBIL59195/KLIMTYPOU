local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏
local SETTINGS = {
    GAME_ID = 109983668079237,
    PASTEFY_URL = "https://pastefy.app/kA1NrWR2/raw",
    COOLDOWN_TIME = 5 * 60,
    COUNTDOWN_TIME = 6,
    ERROR_RETRY_DELAY = 3,  -- 3 —Å–µ–∫—É–Ω–¥—ã –ø—Ä–∏ –æ—à–∏–±–∫–µ
    SUCCESS_DELAY = 3       -- 6 —Å–µ–∫—É–Ω–¥ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
}

-- –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö
local SERVER_LIST = {}
local BLACKLIST = {}
local SHOW_COUNTDOWN = true

-- –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ—à–∏–±–æ–∫ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏
local function IsTeleportError(err)
    local errorStr = tostring(err)
    return string.find(errorStr, "Unauthorized") ~= nil or
           string.find(errorStr, "cannot be joined") ~= nil or
           string.find(errorStr, "Teleport") ~= nil or
           string.find(errorStr, "experience is full") ~= nil or
           string.find(errorStr, "GameFull") ~= nil
end

local function LoadServers()
    local success, response = pcall(function()
        return game:HttpGet(SETTINGS.PASTEFY_URL)
    end)
    
    if not success then 
        warn("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤: "..tostring(response))
        return {}
    end
    
    local servers = {}
    for serverId in string.gmatch(response, "([a-f0-9%-]+)") do
        table.insert(servers, serverId)
    end
    return servers
end

local function IsServerAvailable(serverId)
    if not BLACKLIST[serverId] then return true end
    return (os.time() - BLACKLIST[serverId]) > SETTINGS.COOLDOWN_TIME
end

local function TryTeleport(target)
    if SHOW_COUNTDOWN then
        for i = SETTINGS.COUNTDOWN_TIME, 1, -1 do
            print("üïí –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ "..i.." —Å–µ–∫...")
            task.wait(1)
        end
        SHOW_COUNTDOWN = false
    end
    
    local success, err = pcall(function()
        TeleportService:TeleportToPlaceInstance(
            SETTINGS.GAME_ID,
            target,
            Players.LocalPlayer
        )
    end)
    
    if not success then
        if IsTeleportError(err) then
            print("‚õî –û—à–∏–±–∫–∞: "..tostring(err):match("^[^\n]+"))
        else
            print("‚ö† –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: "..tostring(err):match("^[^\n]+"))
        end
        BLACKLIST[target] = os.time()
        print("‚è≥ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ "..SETTINGS.ERROR_RETRY_DELAY.." —Å–µ–∫...")
        task.wait(SETTINGS.ERROR_RETRY_DELAY)  -- –û–∂–∏–¥–∞–Ω–∏–µ 3 —Å–µ–∫—É–Ω–¥—ã –ø—Ä–∏ –æ—à–∏–±–∫–µ
        return false
    end
    
    print("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ! –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ "..SETTINGS.SUCCESS_DELAY.." —Å–µ–∫...")
    task.wait(SETTINGS.SUCCESS_DELAY)  -- –û–∂–∏–¥–∞–Ω–∏–µ 6 —Å–µ–∫—É–Ω–¥ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
    return true
end

local function TeleportLoop()
    while true do
        SERVER_LIST = LoadServers()
        if #SERVER_LIST == 0 then
            warn("‚ö† –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ –ø—É—Å—Ç. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ 10 —Å–µ–∫...")
            task.wait(10)
        else
            print("‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ —Å–µ—Ä–≤–µ—Ä–æ–≤: "..#SERVER_LIST)
            break
        end
    end
    
    while true do
        local available = {}
        for _, serverId in ipairs(SERVER_LIST) do
            if IsServerAvailable(serverId) then
                table.insert(available, serverId)
            end
        end
        
        if #available == 0 then
            print("‚è≥ –í—Å–µ —Å–µ—Ä–≤–µ—Ä—ã –Ω–∞ –∫–¥. –û–∂–∏–¥–∞–Ω–∏–µ "..SETTINGS.COOLDOWN_TIME.." —Å–µ–∫...")
            SHOW_COUNTDOWN = true
            task.wait(SETTINGS.COOLDOWN_TIME)
            SERVER_LIST = LoadServers()
        else
            local target = available[math.random(1, #available)]
            print("üîç –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ "..target:sub(1, 8).."...")
            
            if TryTeleport(target) then
                print("üöÄ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ!")
                break
            end
            -- –ü—Ä–∏ –æ—à–∏–±–∫–µ —É–∂–µ –µ—Å—Ç—å –∑–∞–¥–µ—Ä–∂–∫–∞ –≤ TryTeleport
        end
    end
end

-- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
while true do
    local success, err = pcall(TeleportLoop)
    if not success then
        warn("üõë –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: "..tostring(err))
        SHOW_COUNTDOWN = true
        task.wait(5)
    end
end
